//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LindaSonrisa.WPF.LSservicio {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LSservicio.IServicioLS")]
    public interface IServicioLS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/Validar", ReplyAction="http://tempuri.org/IServicioLS/ValidarResponse")]
        bool Validar(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/Validar", ReplyAction="http://tempuri.org/IServicioLS/ValidarResponse")]
        System.Threading.Tasks.Task<bool> ValidarAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/Leer", ReplyAction="http://tempuri.org/IServicioLS/LeerResponse")]
        string Leer(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/Leer", ReplyAction="http://tempuri.org/IServicioLS/LeerResponse")]
        System.Threading.Tasks.Task<string> LeerAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ModificarUsuario", ReplyAction="http://tempuri.org/IServicioLS/ModificarUsuarioResponse")]
        bool ModificarUsuario(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ModificarUsuario", ReplyAction="http://tempuri.org/IServicioLS/ModificarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ModificarUsuarioAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerUsuarioPorClienteRut", ReplyAction="http://tempuri.org/IServicioLS/LeerUsuarioPorClienteRutResponse")]
        string LeerUsuarioPorClienteRut(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerUsuarioPorClienteRut", ReplyAction="http://tempuri.org/IServicioLS/LeerUsuarioPorClienteRutResponse")]
        System.Threading.Tasks.Task<string> LeerUsuarioPorClienteRutAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearUsuario", ReplyAction="http://tempuri.org/IServicioLS/CrearUsuarioResponse")]
        bool CrearUsuario(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearUsuario", ReplyAction="http://tempuri.org/IServicioLS/CrearUsuarioResponse")]
        System.Threading.Tasks.Task<bool> CrearUsuarioAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerPorRut", ReplyAction="http://tempuri.org/IServicioLS/LeerPorRutResponse")]
        string LeerPorRut(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerPorRut", ReplyAction="http://tempuri.org/IServicioLS/LeerPorRutResponse")]
        System.Threading.Tasks.Task<string> LeerPorRutAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarUsuarioPorRut", ReplyAction="http://tempuri.org/IServicioLS/EliminarUsuarioPorRutResponse")]
        bool EliminarUsuarioPorRut(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarUsuarioPorRut", ReplyAction="http://tempuri.org/IServicioLS/EliminarUsuarioPorRutResponse")]
        System.Threading.Tasks.Task<bool> EliminarUsuarioPorRutAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerProductoPorNombre", ReplyAction="http://tempuri.org/IServicioLS/LeerProductoPorNombreResponse")]
        string LeerProductoPorNombre(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerProductoPorNombre", ReplyAction="http://tempuri.org/IServicioLS/LeerProductoPorNombreResponse")]
        System.Threading.Tasks.Task<string> LeerProductoPorNombreAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearProducto", ReplyAction="http://tempuri.org/IServicioLS/CrearProductoResponse")]
        bool CrearProducto(string xml, string idFP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearProducto", ReplyAction="http://tempuri.org/IServicioLS/CrearProductoResponse")]
        System.Threading.Tasks.Task<bool> CrearProductoAsync(string xml, string idFP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllProductos", ReplyAction="http://tempuri.org/IServicioLS/readAllProductosResponse")]
        string readAllProductos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllProductos", ReplyAction="http://tempuri.org/IServicioLS/readAllProductosResponse")]
        System.Threading.Tasks.Task<string> readAllProductosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllProductosByTipo", ReplyAction="http://tempuri.org/IServicioLS/readAllProductosByTipoResponse")]
        string readAllProductosByTipo(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllProductosByTipo", ReplyAction="http://tempuri.org/IServicioLS/readAllProductosByTipoResponse")]
        System.Threading.Tasks.Task<string> readAllProductosByTipoAsync(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerProducto", ReplyAction="http://tempuri.org/IServicioLS/LeerProductoResponse")]
        string LeerProducto(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerProducto", ReplyAction="http://tempuri.org/IServicioLS/LeerProductoResponse")]
        System.Threading.Tasks.Task<string> LeerProductoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarProducto", ReplyAction="http://tempuri.org/IServicioLS/EliminarProductoResponse")]
        bool EliminarProducto(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarProducto", ReplyAction="http://tempuri.org/IServicioLS/EliminarProductoResponse")]
        System.Threading.Tasks.Task<bool> EliminarProductoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarProducto", ReplyAction="http://tempuri.org/IServicioLS/ActualizarProductoResponse")]
        bool ActualizarProducto(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarProducto", ReplyAction="http://tempuri.org/IServicioLS/ActualizarProductoResponse")]
        System.Threading.Tasks.Task<bool> ActualizarProductoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllTipoProductoByFP", ReplyAction="http://tempuri.org/IServicioLS/readAllTipoProductoByFPResponse")]
        string readAllTipoProductoByFP(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllTipoProductoByFP", ReplyAction="http://tempuri.org/IServicioLS/readAllTipoProductoByFPResponse")]
        System.Threading.Tasks.Task<string> readAllTipoProductoByFPAsync(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllTipoProducto", ReplyAction="http://tempuri.org/IServicioLS/readAllTipoProductoResponse")]
        string readAllTipoProducto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllTipoProducto", ReplyAction="http://tempuri.org/IServicioLS/readAllTipoProductoResponse")]
        System.Threading.Tasks.Task<string> readAllTipoProductoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTipoProducto", ReplyAction="http://tempuri.org/IServicioLS/LeerTipoProductoResponse")]
        string LeerTipoProducto(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTipoProducto", ReplyAction="http://tempuri.org/IServicioLS/LeerTipoProductoResponse")]
        System.Threading.Tasks.Task<string> LeerTipoProductoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTipoProductoPorID", ReplyAction="http://tempuri.org/IServicioLS/LeerTipoProductoPorIDResponse")]
        string LeerTipoProductoPorID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTipoProductoPorID", ReplyAction="http://tempuri.org/IServicioLS/LeerTipoProductoPorIDResponse")]
        System.Threading.Tasks.Task<string> LeerTipoProductoPorIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllFamiliaProducto", ReplyAction="http://tempuri.org/IServicioLS/readAllFamiliaProductoResponse")]
        string readAllFamiliaProducto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readAllFamiliaProducto", ReplyAction="http://tempuri.org/IServicioLS/readAllFamiliaProductoResponse")]
        System.Threading.Tasks.Task<string> readAllFamiliaProductoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readFamiliaProducto", ReplyAction="http://tempuri.org/IServicioLS/readFamiliaProductoResponse")]
        string readFamiliaProducto(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/readFamiliaProducto", ReplyAction="http://tempuri.org/IServicioLS/readFamiliaProductoResponse")]
        System.Threading.Tasks.Task<string> readFamiliaProductoAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarEmpleado", ReplyAction="http://tempuri.org/IServicioLS/ActualizarEmpleadoResponse")]
        bool ActualizarEmpleado(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarEmpleado", ReplyAction="http://tempuri.org/IServicioLS/ActualizarEmpleadoResponse")]
        System.Threading.Tasks.Task<bool> ActualizarEmpleadoAsync(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearEmpleado", ReplyAction="http://tempuri.org/IServicioLS/CrearEmpleadoResponse")]
        bool CrearEmpleado(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearEmpleado", ReplyAction="http://tempuri.org/IServicioLS/CrearEmpleadoResponse")]
        System.Threading.Tasks.Task<bool> CrearEmpleadoAsync(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarEmpleado", ReplyAction="http://tempuri.org/IServicioLS/EliminarEmpleadoResponse")]
        bool EliminarEmpleado(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarEmpleado", ReplyAction="http://tempuri.org/IServicioLS/EliminarEmpleadoResponse")]
        System.Threading.Tasks.Task<bool> EliminarEmpleadoAsync(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerEmpleado", ReplyAction="http://tempuri.org/IServicioLS/LeerEmpleadoResponse")]
        string LeerEmpleado(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerEmpleado", ReplyAction="http://tempuri.org/IServicioLS/LeerEmpleadoResponse")]
        System.Threading.Tasks.Task<string> LeerEmpleadoAsync(string xmlEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleados", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosResponse")]
        string LeerTodosEmpleados();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleados", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosResponse")]
        System.Threading.Tasks.Task<string> LeerTodosEmpleadosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByNombre", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByNombreResponse")]
        string LeerTodosEmpleadosByNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByNombre", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByNombreResponse")]
        System.Threading.Tasks.Task<string> LeerTodosEmpleadosByNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoP", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoPResponse")]
        string LeerTodosEmpleadosByApellidoP(string apellidoP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoP", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoPResponse")]
        System.Threading.Tasks.Task<string> LeerTodosEmpleadosByApellidoPAsync(string apellidoP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoM", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoMResponse")]
        string LeerTodosEmpleadosByApellidoM(string apellidoM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoM", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByApellidoMResponse")]
        System.Threading.Tasks.Task<string> LeerTodosEmpleadosByApellidoMAsync(string apellidoM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByDireccion", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByDireccionResponse")]
        string LeerTodosEmpleadosByDireccion(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByDireccion", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByDireccionResponse")]
        System.Threading.Tasks.Task<string> LeerTodosEmpleadosByDireccionAsync(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByCargo", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByCargoResponse")]
        string LeerTodosEmpleadosByCargo(string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByCargo", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByCargoResponse")]
        System.Threading.Tasks.Task<string> LeerTodosEmpleadosByCargoAsync(string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByComuna", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByComunaResponse")]
        string LeerTodosEmpleadosByComuna(string comuna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByComuna", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosEmpleadosByComunaResponse")]
        System.Threading.Tasks.Task<string> LeerTodosEmpleadosByComunaAsync(string comuna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodasComunas", ReplyAction="http://tempuri.org/IServicioLS/LeerTodasComunasResponse")]
        string LeerTodasComunas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodasComunas", ReplyAction="http://tempuri.org/IServicioLS/LeerTodasComunasResponse")]
        System.Threading.Tasks.Task<string> LeerTodasComunasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodasComunasById", ReplyAction="http://tempuri.org/IServicioLS/LeerTodasComunasByIdResponse")]
        string LeerTodasComunasById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodasComunasById", ReplyAction="http://tempuri.org/IServicioLS/LeerTodasComunasByIdResponse")]
        System.Threading.Tasks.Task<string> LeerTodasComunasByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerComuna", ReplyAction="http://tempuri.org/IServicioLS/LeerComunaResponse")]
        string LeerComuna(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerComuna", ReplyAction="http://tempuri.org/IServicioLS/LeerComunaResponse")]
        System.Threading.Tasks.Task<string> LeerComunaAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CantidadComunas", ReplyAction="http://tempuri.org/IServicioLS/CantidadComunasResponse")]
        string CantidadComunas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CantidadComunas", ReplyAction="http://tempuri.org/IServicioLS/CantidadComunasResponse")]
        System.Threading.Tasks.Task<string> CantidadComunasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodasProvincias", ReplyAction="http://tempuri.org/IServicioLS/LeerTodasProvinciasResponse")]
        string LeerTodasProvincias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodasProvincias", ReplyAction="http://tempuri.org/IServicioLS/LeerTodasProvinciasResponse")]
        System.Threading.Tasks.Task<string> LeerTodasProvinciasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerProvincia", ReplyAction="http://tempuri.org/IServicioLS/LeerProvinciaResponse")]
        string LeerProvincia(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerProvincia", ReplyAction="http://tempuri.org/IServicioLS/LeerProvinciaResponse")]
        System.Threading.Tasks.Task<string> LeerProvinciaAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosCargos", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosCargosResponse")]
        string LeerTodosCargos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosCargos", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosCargosResponse")]
        System.Threading.Tasks.Task<string> LeerTodosCargosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerCargo", ReplyAction="http://tempuri.org/IServicioLS/LeerCargoResponse")]
        string LeerCargo(string xmlcargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerCargo", ReplyAction="http://tempuri.org/IServicioLS/LeerCargoResponse")]
        System.Threading.Tasks.Task<string> LeerCargoAsync(string xmlcargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearClientes", ReplyAction="http://tempuri.org/IServicioLS/CrearClientesResponse")]
        bool CrearClientes(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearClientes", ReplyAction="http://tempuri.org/IServicioLS/CrearClientesResponse")]
        System.Threading.Tasks.Task<bool> CrearClientesAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerCliente", ReplyAction="http://tempuri.org/IServicioLS/LeerClienteResponse")]
        string LeerCliente(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerCliente", ReplyAction="http://tempuri.org/IServicioLS/LeerClienteResponse")]
        System.Threading.Tasks.Task<string> LeerClienteAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/BorrarCliente", ReplyAction="http://tempuri.org/IServicioLS/BorrarClienteResponse")]
        bool BorrarCliente(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/BorrarCliente", ReplyAction="http://tempuri.org/IServicioLS/BorrarClienteResponse")]
        System.Threading.Tasks.Task<bool> BorrarClienteAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarCliente", ReplyAction="http://tempuri.org/IServicioLS/ActualizarClienteResponse")]
        bool ActualizarCliente(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarCliente", ReplyAction="http://tempuri.org/IServicioLS/ActualizarClienteResponse")]
        System.Threading.Tasks.Task<bool> ActualizarClienteAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosClientes", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosClientesResponse")]
        string LeerTodosLosClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosClientes", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosClientesResponse")]
        System.Threading.Tasks.Task<string> LeerTodosLosClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosClientesPorRutPasaporte", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosClientesPorRutPasaporteResponse")]
        string LeerTodosLosClientesPorRutPasaporte(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosClientesPorRutPasaporte", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosClientesPorRutPasaporteResponse")]
        System.Threading.Tasks.Task<string> LeerTodosLosClientesPorRutPasaporteAsync(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CreateServicio", ReplyAction="http://tempuri.org/IServicioLS/CreateServicioResponse")]
        bool CreateServicio(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CreateServicio", ReplyAction="http://tempuri.org/IServicioLS/CreateServicioResponse")]
        System.Threading.Tasks.Task<bool> CreateServicioAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerServicio", ReplyAction="http://tempuri.org/IServicioLS/LeerServicioResponse")]
        string LeerServicio(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerServicio", ReplyAction="http://tempuri.org/IServicioLS/LeerServicioResponse")]
        System.Threading.Tasks.Task<string> LeerServicioAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosServicios", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosServiciosResponse")]
        string LeerTodosLosServicios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosServicios", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosServiciosResponse")]
        System.Threading.Tasks.Task<string> LeerTodosLosServiciosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerServicioPorNombre", ReplyAction="http://tempuri.org/IServicioLS/LeerServicioPorNombreResponse")]
        string LeerServicioPorNombre(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerServicioPorNombre", ReplyAction="http://tempuri.org/IServicioLS/LeerServicioPorNombreResponse")]
        System.Threading.Tasks.Task<string> LeerServicioPorNombreAsync(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/BorrarServicio", ReplyAction="http://tempuri.org/IServicioLS/BorrarServicioResponse")]
        bool BorrarServicio(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/BorrarServicio", ReplyAction="http://tempuri.org/IServicioLS/BorrarServicioResponse")]
        System.Threading.Tasks.Task<bool> BorrarServicioAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarServicio", ReplyAction="http://tempuri.org/IServicioLS/ActualizarServicioResponse")]
        bool ActualizarServicio(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarServicio", ReplyAction="http://tempuri.org/IServicioLS/ActualizarServicioResponse")]
        System.Threading.Tasks.Task<bool> ActualizarServicioAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CreateServicioProducto", ReplyAction="http://tempuri.org/IServicioLS/CreateServicioProductoResponse")]
        bool CreateServicioProducto(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CreateServicioProducto", ReplyAction="http://tempuri.org/IServicioLS/CreateServicioProductoResponse")]
        System.Threading.Tasks.Task<bool> CreateServicioProductoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosServiciosProducto", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosServiciosProductoResponse")]
        string LeerTodosLosServiciosProducto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerTodosLosServiciosProducto", ReplyAction="http://tempuri.org/IServicioLS/LeerTodosLosServiciosProductoResponse")]
        System.Threading.Tasks.Task<string> LeerTodosLosServiciosProductoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerServicioProductoPorIdServicio", ReplyAction="http://tempuri.org/IServicioLS/LeerServicioProductoPorIdServicioResponse")]
        string LeerServicioProductoPorIdServicio(decimal val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/LeerServicioProductoPorIdServicio", ReplyAction="http://tempuri.org/IServicioLS/LeerServicioProductoPorIdServicioResponse")]
        System.Threading.Tasks.Task<string> LeerServicioProductoPorIdServicioAsync(decimal val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/BorrarServicioProducto", ReplyAction="http://tempuri.org/IServicioLS/BorrarServicioProductoResponse")]
        bool BorrarServicioProducto(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/BorrarServicioProducto", ReplyAction="http://tempuri.org/IServicioLS/BorrarServicioProductoResponse")]
        System.Threading.Tasks.Task<bool> BorrarServicioProductoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/TraerProveedor", ReplyAction="http://tempuri.org/IServicioLS/TraerProveedorResponse")]
        string TraerProveedor(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/TraerProveedor", ReplyAction="http://tempuri.org/IServicioLS/TraerProveedorResponse")]
        System.Threading.Tasks.Task<string> TraerProveedorAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearProv", ReplyAction="http://tempuri.org/IServicioLS/CrearProvResponse")]
        bool CrearProv(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearProv", ReplyAction="http://tempuri.org/IServicioLS/CrearProvResponse")]
        System.Threading.Tasks.Task<bool> CrearProvAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarProv", ReplyAction="http://tempuri.org/IServicioLS/ActualizarProvResponse")]
        bool ActualizarProv(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ActualizarProv", ReplyAction="http://tempuri.org/IServicioLS/ActualizarProvResponse")]
        System.Threading.Tasks.Task<bool> ActualizarProvAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarProv", ReplyAction="http://tempuri.org/IServicioLS/EliminarProvResponse")]
        bool EliminarProv(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarProv", ReplyAction="http://tempuri.org/IServicioLS/EliminarProvResponse")]
        System.Threading.Tasks.Task<bool> EliminarProvAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/TraerProvall", ReplyAction="http://tempuri.org/IServicioLS/TraerProvallResponse")]
        string TraerProvall();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/TraerProvall", ReplyAction="http://tempuri.org/IServicioLS/TraerProvallResponse")]
        System.Threading.Tasks.Task<string> TraerProvallAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/TraerRubros", ReplyAction="http://tempuri.org/IServicioLS/TraerRubrosResponse")]
        string TraerRubros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/TraerRubros", ReplyAction="http://tempuri.org/IServicioLS/TraerRubrosResponse")]
        System.Threading.Tasks.Task<string> TraerRubrosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/FiltrarProvedorPorRubro", ReplyAction="http://tempuri.org/IServicioLS/FiltrarProvedorPorRubroResponse")]
        string FiltrarProvedorPorRubro(string rubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/FiltrarProvedorPorRubro", ReplyAction="http://tempuri.org/IServicioLS/FiltrarProvedorPorRubroResponse")]
        System.Threading.Tasks.Task<string> FiltrarProvedorPorRubroAsync(string rubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/FiltrarProvedorPorProvincia", ReplyAction="http://tempuri.org/IServicioLS/FiltrarProvedorPorProvinciaResponse")]
        string FiltrarProvedorPorProvincia(string provincia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/FiltrarProvedorPorProvincia", ReplyAction="http://tempuri.org/IServicioLS/FiltrarProvedorPorProvinciaResponse")]
        System.Threading.Tasks.Task<string> FiltrarProvedorPorProvinciaAsync(string provincia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearOdontologo", ReplyAction="http://tempuri.org/IServicioLS/CrearOdontologoResponse")]
        bool CrearOdontologo(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/CrearOdontologo", ReplyAction="http://tempuri.org/IServicioLS/CrearOdontologoResponse")]
        System.Threading.Tasks.Task<bool> CrearOdontologoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarOdonPorRut", ReplyAction="http://tempuri.org/IServicioLS/EliminarOdonPorRutResponse")]
        bool EliminarOdonPorRut(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/EliminarOdonPorRut", ReplyAction="http://tempuri.org/IServicioLS/EliminarOdonPorRutResponse")]
        System.Threading.Tasks.Task<bool> EliminarOdonPorRutAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ComunasConMasClientes", ReplyAction="http://tempuri.org/IServicioLS/ComunasConMasClientesResponse")]
        string ComunasConMasClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLS/ComunasConMasClientes", ReplyAction="http://tempuri.org/IServicioLS/ComunasConMasClientesResponse")]
        System.Threading.Tasks.Task<string> ComunasConMasClientesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioLSChannel : LindaSonrisa.WPF.LSservicio.IServicioLS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioLSClient : System.ServiceModel.ClientBase<LindaSonrisa.WPF.LSservicio.IServicioLS>, LindaSonrisa.WPF.LSservicio.IServicioLS {
        
        public ServicioLSClient() {
        }
        
        public ServicioLSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioLSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioLSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioLSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Validar(string xml) {
            return base.Channel.Validar(xml);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarAsync(string xml) {
            return base.Channel.ValidarAsync(xml);
        }
        
        public string Leer(string xml) {
            return base.Channel.Leer(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerAsync(string xml) {
            return base.Channel.LeerAsync(xml);
        }
        
        public bool ModificarUsuario(string xml) {
            return base.Channel.ModificarUsuario(xml);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarUsuarioAsync(string xml) {
            return base.Channel.ModificarUsuarioAsync(xml);
        }
        
        public string LeerUsuarioPorClienteRut(string xml) {
            return base.Channel.LeerUsuarioPorClienteRut(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerUsuarioPorClienteRutAsync(string xml) {
            return base.Channel.LeerUsuarioPorClienteRutAsync(xml);
        }
        
        public bool CrearUsuario(string xml) {
            return base.Channel.CrearUsuario(xml);
        }
        
        public System.Threading.Tasks.Task<bool> CrearUsuarioAsync(string xml) {
            return base.Channel.CrearUsuarioAsync(xml);
        }
        
        public string LeerPorRut(string xml) {
            return base.Channel.LeerPorRut(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerPorRutAsync(string xml) {
            return base.Channel.LeerPorRutAsync(xml);
        }
        
        public bool EliminarUsuarioPorRut(string xml) {
            return base.Channel.EliminarUsuarioPorRut(xml);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarUsuarioPorRutAsync(string xml) {
            return base.Channel.EliminarUsuarioPorRutAsync(xml);
        }
        
        public string LeerProductoPorNombre(string xml) {
            return base.Channel.LeerProductoPorNombre(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerProductoPorNombreAsync(string xml) {
            return base.Channel.LeerProductoPorNombreAsync(xml);
        }
        
        public bool CrearProducto(string xml, string idFP) {
            return base.Channel.CrearProducto(xml, idFP);
        }
        
        public System.Threading.Tasks.Task<bool> CrearProductoAsync(string xml, string idFP) {
            return base.Channel.CrearProductoAsync(xml, idFP);
        }
        
        public string readAllProductos() {
            return base.Channel.readAllProductos();
        }
        
        public System.Threading.Tasks.Task<string> readAllProductosAsync() {
            return base.Channel.readAllProductosAsync();
        }
        
        public string readAllProductosByTipo(string val) {
            return base.Channel.readAllProductosByTipo(val);
        }
        
        public System.Threading.Tasks.Task<string> readAllProductosByTipoAsync(string val) {
            return base.Channel.readAllProductosByTipoAsync(val);
        }
        
        public string LeerProducto(string xml) {
            return base.Channel.LeerProducto(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerProductoAsync(string xml) {
            return base.Channel.LeerProductoAsync(xml);
        }
        
        public bool EliminarProducto(string xml) {
            return base.Channel.EliminarProducto(xml);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarProductoAsync(string xml) {
            return base.Channel.EliminarProductoAsync(xml);
        }
        
        public bool ActualizarProducto(string xml) {
            return base.Channel.ActualizarProducto(xml);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarProductoAsync(string xml) {
            return base.Channel.ActualizarProductoAsync(xml);
        }
        
        public string readAllTipoProductoByFP(string val) {
            return base.Channel.readAllTipoProductoByFP(val);
        }
        
        public System.Threading.Tasks.Task<string> readAllTipoProductoByFPAsync(string val) {
            return base.Channel.readAllTipoProductoByFPAsync(val);
        }
        
        public string readAllTipoProducto() {
            return base.Channel.readAllTipoProducto();
        }
        
        public System.Threading.Tasks.Task<string> readAllTipoProductoAsync() {
            return base.Channel.readAllTipoProductoAsync();
        }
        
        public string LeerTipoProducto(string xml) {
            return base.Channel.LeerTipoProducto(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerTipoProductoAsync(string xml) {
            return base.Channel.LeerTipoProductoAsync(xml);
        }
        
        public string LeerTipoProductoPorID(string id) {
            return base.Channel.LeerTipoProductoPorID(id);
        }
        
        public System.Threading.Tasks.Task<string> LeerTipoProductoPorIDAsync(string id) {
            return base.Channel.LeerTipoProductoPorIDAsync(id);
        }
        
        public string readAllFamiliaProducto() {
            return base.Channel.readAllFamiliaProducto();
        }
        
        public System.Threading.Tasks.Task<string> readAllFamiliaProductoAsync() {
            return base.Channel.readAllFamiliaProductoAsync();
        }
        
        public string readFamiliaProducto(string id) {
            return base.Channel.readFamiliaProducto(id);
        }
        
        public System.Threading.Tasks.Task<string> readFamiliaProductoAsync(string id) {
            return base.Channel.readFamiliaProductoAsync(id);
        }
        
        public bool ActualizarEmpleado(string xmlEmpleado) {
            return base.Channel.ActualizarEmpleado(xmlEmpleado);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarEmpleadoAsync(string xmlEmpleado) {
            return base.Channel.ActualizarEmpleadoAsync(xmlEmpleado);
        }
        
        public bool CrearEmpleado(string xmlEmpleado) {
            return base.Channel.CrearEmpleado(xmlEmpleado);
        }
        
        public System.Threading.Tasks.Task<bool> CrearEmpleadoAsync(string xmlEmpleado) {
            return base.Channel.CrearEmpleadoAsync(xmlEmpleado);
        }
        
        public bool EliminarEmpleado(string xmlEmpleado) {
            return base.Channel.EliminarEmpleado(xmlEmpleado);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarEmpleadoAsync(string xmlEmpleado) {
            return base.Channel.EliminarEmpleadoAsync(xmlEmpleado);
        }
        
        public string LeerEmpleado(string xmlEmpleado) {
            return base.Channel.LeerEmpleado(xmlEmpleado);
        }
        
        public System.Threading.Tasks.Task<string> LeerEmpleadoAsync(string xmlEmpleado) {
            return base.Channel.LeerEmpleadoAsync(xmlEmpleado);
        }
        
        public string LeerTodosEmpleados() {
            return base.Channel.LeerTodosEmpleados();
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosEmpleadosAsync() {
            return base.Channel.LeerTodosEmpleadosAsync();
        }
        
        public string LeerTodosEmpleadosByNombre(string nombre) {
            return base.Channel.LeerTodosEmpleadosByNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosEmpleadosByNombreAsync(string nombre) {
            return base.Channel.LeerTodosEmpleadosByNombreAsync(nombre);
        }
        
        public string LeerTodosEmpleadosByApellidoP(string apellidoP) {
            return base.Channel.LeerTodosEmpleadosByApellidoP(apellidoP);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosEmpleadosByApellidoPAsync(string apellidoP) {
            return base.Channel.LeerTodosEmpleadosByApellidoPAsync(apellidoP);
        }
        
        public string LeerTodosEmpleadosByApellidoM(string apellidoM) {
            return base.Channel.LeerTodosEmpleadosByApellidoM(apellidoM);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosEmpleadosByApellidoMAsync(string apellidoM) {
            return base.Channel.LeerTodosEmpleadosByApellidoMAsync(apellidoM);
        }
        
        public string LeerTodosEmpleadosByDireccion(string direccion) {
            return base.Channel.LeerTodosEmpleadosByDireccion(direccion);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosEmpleadosByDireccionAsync(string direccion) {
            return base.Channel.LeerTodosEmpleadosByDireccionAsync(direccion);
        }
        
        public string LeerTodosEmpleadosByCargo(string cargo) {
            return base.Channel.LeerTodosEmpleadosByCargo(cargo);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosEmpleadosByCargoAsync(string cargo) {
            return base.Channel.LeerTodosEmpleadosByCargoAsync(cargo);
        }
        
        public string LeerTodosEmpleadosByComuna(string comuna) {
            return base.Channel.LeerTodosEmpleadosByComuna(comuna);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosEmpleadosByComunaAsync(string comuna) {
            return base.Channel.LeerTodosEmpleadosByComunaAsync(comuna);
        }
        
        public string LeerTodasComunas() {
            return base.Channel.LeerTodasComunas();
        }
        
        public System.Threading.Tasks.Task<string> LeerTodasComunasAsync() {
            return base.Channel.LeerTodasComunasAsync();
        }
        
        public string LeerTodasComunasById(string id) {
            return base.Channel.LeerTodasComunasById(id);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodasComunasByIdAsync(string id) {
            return base.Channel.LeerTodasComunasByIdAsync(id);
        }
        
        public string LeerComuna(string xml) {
            return base.Channel.LeerComuna(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerComunaAsync(string xml) {
            return base.Channel.LeerComunaAsync(xml);
        }
        
        public string CantidadComunas() {
            return base.Channel.CantidadComunas();
        }
        
        public System.Threading.Tasks.Task<string> CantidadComunasAsync() {
            return base.Channel.CantidadComunasAsync();
        }
        
        public string LeerTodasProvincias() {
            return base.Channel.LeerTodasProvincias();
        }
        
        public System.Threading.Tasks.Task<string> LeerTodasProvinciasAsync() {
            return base.Channel.LeerTodasProvinciasAsync();
        }
        
        public string LeerProvincia(string xml) {
            return base.Channel.LeerProvincia(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerProvinciaAsync(string xml) {
            return base.Channel.LeerProvinciaAsync(xml);
        }
        
        public string LeerTodosCargos() {
            return base.Channel.LeerTodosCargos();
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosCargosAsync() {
            return base.Channel.LeerTodosCargosAsync();
        }
        
        public string LeerCargo(string xmlcargo) {
            return base.Channel.LeerCargo(xmlcargo);
        }
        
        public System.Threading.Tasks.Task<string> LeerCargoAsync(string xmlcargo) {
            return base.Channel.LeerCargoAsync(xmlcargo);
        }
        
        public bool CrearClientes(string xml) {
            return base.Channel.CrearClientes(xml);
        }
        
        public System.Threading.Tasks.Task<bool> CrearClientesAsync(string xml) {
            return base.Channel.CrearClientesAsync(xml);
        }
        
        public string LeerCliente(string xml) {
            return base.Channel.LeerCliente(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerClienteAsync(string xml) {
            return base.Channel.LeerClienteAsync(xml);
        }
        
        public bool BorrarCliente(string xml) {
            return base.Channel.BorrarCliente(xml);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarClienteAsync(string xml) {
            return base.Channel.BorrarClienteAsync(xml);
        }
        
        public bool ActualizarCliente(string xml) {
            return base.Channel.ActualizarCliente(xml);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarClienteAsync(string xml) {
            return base.Channel.ActualizarClienteAsync(xml);
        }
        
        public string LeerTodosLosClientes() {
            return base.Channel.LeerTodosLosClientes();
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosLosClientesAsync() {
            return base.Channel.LeerTodosLosClientesAsync();
        }
        
        public string LeerTodosLosClientesPorRutPasaporte(string val) {
            return base.Channel.LeerTodosLosClientesPorRutPasaporte(val);
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosLosClientesPorRutPasaporteAsync(string val) {
            return base.Channel.LeerTodosLosClientesPorRutPasaporteAsync(val);
        }
        
        public bool CreateServicio(string xml) {
            return base.Channel.CreateServicio(xml);
        }
        
        public System.Threading.Tasks.Task<bool> CreateServicioAsync(string xml) {
            return base.Channel.CreateServicioAsync(xml);
        }
        
        public string LeerServicio(string xml) {
            return base.Channel.LeerServicio(xml);
        }
        
        public System.Threading.Tasks.Task<string> LeerServicioAsync(string xml) {
            return base.Channel.LeerServicioAsync(xml);
        }
        
        public string LeerTodosLosServicios() {
            return base.Channel.LeerTodosLosServicios();
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosLosServiciosAsync() {
            return base.Channel.LeerTodosLosServiciosAsync();
        }
        
        public string LeerServicioPorNombre(string val) {
            return base.Channel.LeerServicioPorNombre(val);
        }
        
        public System.Threading.Tasks.Task<string> LeerServicioPorNombreAsync(string val) {
            return base.Channel.LeerServicioPorNombreAsync(val);
        }
        
        public bool BorrarServicio(string xml) {
            return base.Channel.BorrarServicio(xml);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarServicioAsync(string xml) {
            return base.Channel.BorrarServicioAsync(xml);
        }
        
        public bool ActualizarServicio(string xml) {
            return base.Channel.ActualizarServicio(xml);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarServicioAsync(string xml) {
            return base.Channel.ActualizarServicioAsync(xml);
        }
        
        public bool CreateServicioProducto(string xml) {
            return base.Channel.CreateServicioProducto(xml);
        }
        
        public System.Threading.Tasks.Task<bool> CreateServicioProductoAsync(string xml) {
            return base.Channel.CreateServicioProductoAsync(xml);
        }
        
        public string LeerTodosLosServiciosProducto() {
            return base.Channel.LeerTodosLosServiciosProducto();
        }
        
        public System.Threading.Tasks.Task<string> LeerTodosLosServiciosProductoAsync() {
            return base.Channel.LeerTodosLosServiciosProductoAsync();
        }
        
        public string LeerServicioProductoPorIdServicio(decimal val) {
            return base.Channel.LeerServicioProductoPorIdServicio(val);
        }
        
        public System.Threading.Tasks.Task<string> LeerServicioProductoPorIdServicioAsync(decimal val) {
            return base.Channel.LeerServicioProductoPorIdServicioAsync(val);
        }
        
        public bool BorrarServicioProducto(string xml) {
            return base.Channel.BorrarServicioProducto(xml);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarServicioProductoAsync(string xml) {
            return base.Channel.BorrarServicioProductoAsync(xml);
        }
        
        public string TraerProveedor(string xml) {
            return base.Channel.TraerProveedor(xml);
        }
        
        public System.Threading.Tasks.Task<string> TraerProveedorAsync(string xml) {
            return base.Channel.TraerProveedorAsync(xml);
        }
        
        public bool CrearProv(string xml) {
            return base.Channel.CrearProv(xml);
        }
        
        public System.Threading.Tasks.Task<bool> CrearProvAsync(string xml) {
            return base.Channel.CrearProvAsync(xml);
        }
        
        public bool ActualizarProv(string xml) {
            return base.Channel.ActualizarProv(xml);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarProvAsync(string xml) {
            return base.Channel.ActualizarProvAsync(xml);
        }
        
        public bool EliminarProv(string xml) {
            return base.Channel.EliminarProv(xml);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarProvAsync(string xml) {
            return base.Channel.EliminarProvAsync(xml);
        }
        
        public string TraerProvall() {
            return base.Channel.TraerProvall();
        }
        
        public System.Threading.Tasks.Task<string> TraerProvallAsync() {
            return base.Channel.TraerProvallAsync();
        }
        
        public string TraerRubros() {
            return base.Channel.TraerRubros();
        }
        
        public System.Threading.Tasks.Task<string> TraerRubrosAsync() {
            return base.Channel.TraerRubrosAsync();
        }
        
        public string FiltrarProvedorPorRubro(string rubro) {
            return base.Channel.FiltrarProvedorPorRubro(rubro);
        }
        
        public System.Threading.Tasks.Task<string> FiltrarProvedorPorRubroAsync(string rubro) {
            return base.Channel.FiltrarProvedorPorRubroAsync(rubro);
        }
        
        public string FiltrarProvedorPorProvincia(string provincia) {
            return base.Channel.FiltrarProvedorPorProvincia(provincia);
        }
        
        public System.Threading.Tasks.Task<string> FiltrarProvedorPorProvinciaAsync(string provincia) {
            return base.Channel.FiltrarProvedorPorProvinciaAsync(provincia);
        }
        
        public bool CrearOdontologo(string xml) {
            return base.Channel.CrearOdontologo(xml);
        }
        
        public System.Threading.Tasks.Task<bool> CrearOdontologoAsync(string xml) {
            return base.Channel.CrearOdontologoAsync(xml);
        }
        
        public bool EliminarOdonPorRut(string xml) {
            return base.Channel.EliminarOdonPorRut(xml);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarOdonPorRutAsync(string xml) {
            return base.Channel.EliminarOdonPorRutAsync(xml);
        }
        
        public string ComunasConMasClientes() {
            return base.Channel.ComunasConMasClientes();
        }
        
        public System.Threading.Tasks.Task<string> ComunasConMasClientesAsync() {
            return base.Channel.ComunasConMasClientesAsync();
        }
    }
}
